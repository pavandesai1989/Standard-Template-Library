Queues are a type of container adaptors that operate in a first in first out (FIFO) type of arrangement. Elements are inserted at the back (end) and are deleted from the front.

Queues use an encapsulated object of deque or list (sequential container class) as its underlying container, providing a specific set of member functions to access its elements.

In STL queue is implemeted using Deque *****

#include<iostream>
#include<queue>

using namespace std;


int main()
{
    queue<int> q;

    q.push(1); 
    q.push(2); 
    q.push(3); 
    q.push(4); 
    q.pop();    //removes the front 1.pop --deletes 1st ele of queue

    q.front() = 34;  //modifies front ele to 34 as it returns ref to object 
    q.back() = 1333;  //modifies lase ele to 1333 as it returns ref to object 

    while(!q.empty())
    {
        cout<<q.front()<<" ";
        q.pop();
    }


   return 0;
}
